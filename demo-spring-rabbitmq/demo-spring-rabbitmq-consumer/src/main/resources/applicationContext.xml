<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:rabbit="http://www.springframework.org/schema/rabbit"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
        http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-2.0.xsd">

    <context:component-scan base-package="com.kkwrite.demo.spring.rabbitmq.consumer.topic"></context:component-scan>

    <!-- rabbitMQ 连接工厂配置 -->
    <bean id="rabbitConnectionFactory"
        class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
        <constructor-arg value="192.168.1.116" />
        <property name="username" value="admin" />
        <property name="password" value="admin" />
        <property name="channelCacheSize" value="8" />
        <property name="port" value="5672"></property>
    </bean>
    
    <!-- Spring 的 rabbitmq admin -->
    <rabbit:admin connection-factory="rabbitConnectionFactory" />

    <!-- 定义队列  -->
    <rabbit:queue name="h1_queue" durable="false" />
    <rabbit:queue name="h2_queue" durable="false" />
    <rabbit:queue name="h3_queue" durable="false" />

    <!-- fanout交换器 -->
    <rabbit:fanout-exchange name="fanout-exchange"
        xmlns="http://www.springframework.org/schema/rabbit" durable="false">
        <rabbit:bindings>
            <rabbit:binding queue="h1_queue"></rabbit:binding>
            <rabbit:binding queue="h2_queue"></rabbit:binding>
            <rabbit:binding queue="h3_queue"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <!-- topic交换器  -->
    <rabbit:queue name="all_log_queue" durable="false" />
    <rabbit:queue name="all_error_queue" durable="false" />
    <rabbit:queue name="email_log_queue" durable="false" />
    <rabbit:queue name="email_error_queue" durable="false" />
    
    <rabbit:topic-exchange name="topic-exchange"
        xmlns="http://www.springframework.org/schema/rabbit" durable="false">
        <rabbit:bindings>
            <rabbit:binding queue="all_log_queue" pattern="#"></rabbit:binding>
            <rabbit:binding queue="all_error_queue" pattern="error.*"></rabbit:binding>
            <rabbit:binding queue="email_log_queue" pattern="*.email"></rabbit:binding>
            <rabbit:binding queue="email_error_queue" pattern="*error.email"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>
    
    <!-- 消费者定义 -->
    <bean id="h1_consumer" class="com.kkwrite.demo.spring.rabbitmq.consumer.fanout.H1_Service"></bean>
    <bean id="h2_consumer" class="com.kkwrite.demo.spring.rabbitmq.consumer.fanout.H2_Service"></bean>
    <bean id="h3_consumer" class="com.kkwrite.demo.spring.rabbitmq.consumer.fanout.H3_Service"></bean>
    
    <!-- 监听容器 -->
    <rabbit:listener-container connection-factory="rabbitConnectionFactory">
        <rabbit:listener ref="h1_consumer" queues="h1_queue" method="onMessage" />
        <rabbit:listener ref="h2_consumer" queues="h2_queue" method="onMessage" />
        <rabbit:listener ref="h3_consumer" queues="h3_queue" method="onMessage" />
        
        <rabbit:listener ref="allLogTopicService" queues="all_log_queue" method="onMessage" />
        <rabbit:listener ref="allErrorTopicService" queues="all_error_queue" method="onMessage" />
        <rabbit:listener ref="emailAllTopicService" queues="email_log_queue" method="onMessage" />
        <rabbit:listener ref="emailErrorTopicService" queues="email_error_queue" method="onMessage" />
    </rabbit:listener-container>
</beans>  