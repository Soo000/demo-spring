<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>

	<!-- 配置 C3P0 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
		<property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
	</bean>
	
	<!-- 配置 SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 配置 MyBatis配置文件路径 -->
		<property name="configLocation" value="mybatis/SqlMapConfig.xml"/>
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- UserDao -->
	<bean id="userDao" class="com.demospringmybatis.dao.user.UserDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<!-- 配置 Mapper 
		MapperFactoryBean 根据 mapper接口 生成代理对象
	-->
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<!-- 配置 sqlSessionFactory属性 -->
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<!-- mapperInterface 指定 mapper接口 -->
		<property name="mapperInterface" value="com.demospringmybatis.mapper.UserMapper"/>
	</bean>
	
	<!-- mapper 批量扫描，从 mapper 包中扫描出 mapper接口，自动创建代理对象并在 Spring 容器中注册
		SqlMapConfig 中的 mapper.xml的扫描也可以去掉
		mapper.java 和 mapper.xml 在同一目录且名称相同
		自动扫描出 Bean 的 id 为 Bean 的类名首字母消息		
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描的 mapper 包，扫描多个包不能使用通配符，必须用半角,隔开 -->
		<property name="basePackage" value="com.demospringmybatis.mapper"/>
		<!-- 注意，这里不能用 sqlSessionFactory, 否则 context:property-placeholder 会失效 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
</beans>